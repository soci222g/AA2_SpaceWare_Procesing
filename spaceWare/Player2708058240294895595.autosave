class Player { 
  float PosX;
  float PosY;
  int squareLenght;
  
  //rotate
  float Rotation;
  float Current_rotate;
  float Current_rotate_speed;
  float Max_rotation_Speed;
  
  //speed
  float Speed;
  float max_Speed;
  float current_speed;
  
  
  float shootColdown;
  float currentColdown;
  
  int timerPowerUp;
  float currentTimePowerUp;
  
  //powerUpsTrigers
  boolean tripleShotActive;
  boolean boomeranShoot;
  
  PImage navePJ;
  
  Player (float x, float y, float speed, float max_S, float Rotate_speed, float MaxRotationSpeed, PImage img) {  
   PosX = x;
   PosY = y;
   Rotation = Rotate_speed;
   Speed = speed;
   max_Speed = max_S;
   current_speed = 0;

   //rotation
   Current_rotate = 270;
   Current_rotate_speed= 0;
   Max_rotation_Speed = MaxRotationSpeed;
   squareLenght = 40;
    
    navePJ = img;
    

    
    shootColdown = 10;
    currentColdown = 0;
    
    tripleShotActive = false;
    boomeranShoot = false;
    
    timerPowerUp = 10;
    currentTimePowerUp = 0;
  } 
  
  
//geters
  float getCurrentRotation(){ return Current_rotate; }
  float getX(){ return PosX;}
  float getY(){ return PosY;}
  int getSquareLenght() { return squareLenght;}
  
  
  float Get_Current_Speed(){   return current_speed;}
  
  float Get_ShootColdown(){ return currentColdown;}
  
  boolean GetTripleShoot(){ return tripleShotActive;}
  boolean GetBoomeranShoot(){ return boomeranShoot;}
  
  int GetSquareLengt(){return squareLenght;}
  
  //print
    void PrintPlayer(){
      pushMatrix();
      
       translate(PosX,PosY);
       rotate(radians(Current_rotate));
       translate(current_speed,0);
      
        pushMatrix();
        
        //debujar al jugador (qui le pasa la imagen)
          //fill(0,0,255);
          //rectMode(CENTER);
          //square(0, 0, squareLenght);
          imageMode(CENTER);
          image(navePJ, 0,0,squareLenght,squareLenght);
        
        PosX = modelX(0,0,0);
        PosY = modelY(0,0,0);
        
        popMatrix();
      
      popMatrix();
      
     //Amb això aqui el player es printeja al moment de canviar d'un costat de la pantalla a l'altre
      PlayerBorders();
      
      
    }

  void addSpeed(){
      if (current_speed < max_Speed){
        current_speed += Speed; 
      }
      
    
  }
  void ReduceSpeed(){
   
    if(current_speed  > 0.1){
         current_speed -= Speed; 
      }
      else{
        current_speed = 0;
      }
     

  }
  void activateColldown(){ currentColdown = shootColdown; }
  
  //shoot coldown
  void ColldownShoot(){
    
      if(currentColdown >= 0){
          currentColdown -= 0.1; //hem de normalitzar aixo (utilitzar funcio seconds)
      }
  }
  
  //rotation
  
  void RotateLeft(){
    
    
     if(Current_rotate_speed > (Max_rotation_Speed * -1)){
      Current_rotate_speed -= Rotation;
     }
      Current_rotate += Current_rotate_speed; 
  
  
  
  
  if(Current_rotate <= 0){
      Current_rotate = 360;
     }

      
  }
  
  void RotateRight(){
    
 
    
    if(Current_rotate_speed < Max_rotation_Speed){
      
      Current_rotate_speed += Rotation; 
    }
    
      Current_rotate += Current_rotate_speed;
     if(Current_rotate >= 360){
      Current_rotate = 0;
      }
   
 
  }

void stopRotation(){
  Current_rotate_speed = 0;
}

void PlayerBorders() { // Movimiento del PJ
 

    // Reapareixer al creuar els bordes esquerre i dret de la pantalla augmantem una mica el valor perque no es fagi tp en el centra de la imatge sino al final
    if (PosX > width + 10) {
        PosX = -10;
    } else if (PosX < -10) {
        PosX = width + 10;
    }

    // Reapareixer al creuar els bordes de dalt i abaix de la pantalla augmantem una mica el valor perque no es fagi tp en el centra de la imatge sino al final
    if (PosY > height + 10) {
        PosY = -10;
    } else if (PosY < -10) {
        PosY = height + 10;
    }
}

//cuna el player collisona amb un powwer up activals
  void activate_powerUp(int NumPower){
    if(NumPower == 0){
      tripleShotActive = true;
      currentTimePowerUp = timerPowerUp;
      activeLutPW = true;
      LUT_PW(navePJ); //Crec que aqui esta bé

    }
    if(NumPower == 1){
        boomeranShoot = true;
        currentTimePowerUp = timerPowerUp;
        activeLutPW = true;
        
    }
  }

void TimerPowerUps(){
        if(tripleShotActive){
          if(currentTimePowerUp > 0){
            currentTimePowerUp -= 0.1; //hem de normalitzar aixo (utilitzar funcio seconds)

          }
          else{
              tripleShotActive = false;
              activeLutPW = false;
          }
          
        }
        else if(boomeranShoot){
           if(currentTimePowerUp > 0){
              currentTimePowerUp -= 0.1; //hem de normalitzar aixo (utilitzar funcio seconds)
            }
            else{
                boomeranShoot = false;
                activeLutPW = false;
            } 
        }
        
        if (activeLutPW){
          LUT_PW(navePJ); //Crec que aqui esta bé
        } else {
          
        }
          
  }

  

}
 
    
    
  
